[package]
name = "storage-chain-runtime"
version = "4.0.0-dev"
description = "A fresh FRAME-based Substrate node, ready for hacking."
authors = { workspace = true }
homepage = "https://substrate.io/"
edition = "2021"
license = "Unlicense"
publish = false
repository = { workspace = true}

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
sha3 = { workspace = true }
impl-serde = { workspace = true }
#parity-scale-codec = { version = "3.0.0", features = [ "derive" ] }
libsecp256k1 = { workspace = true, features = [ "hmac" ] }
log = "0.4.17"
serde = "1.0.151"


codec = {package = "parity-scale-codec", workspace = true, features = ["derive"] }
scale-info = { workspace = true, features = ["derive"] }

pallet-aura = { workspace = true }
pallet-session = { workspace = true, features = [ "historical" ] }
pallet-authorship = { workspace = true }
pallet-balances = { workspace = true }
frame-support = { workspace = true }
pallet-grandpa = { workspace = true }
pallet-randomness-collective-flip = { workspace = true }
pallet-sudo = { workspace = true }
frame-system = { workspace = true }
frame-try-runtime = { workspace = true, optional = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
frame-executive = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }

# Used for the node template's RPCs
frame-system-rpc-runtime-api = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }

# Used for runtime benchmarking
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }

# evm dependencies
pallet-evm = {  workspace = true }
pallet-evm-precompile-simple = {  workspace = true }
pallet-evm-precompile-modexp = {  workspace = true }
pallet-evm-precompile-sha3fips = {  workspace = true }
pallet-ethereum = {  workspace = true }
fp-evm = { workspace = true }
fp-self-contained = { workspace = true }
fp-rpc = { workspace = true }
pallet-base-fee = { workspace = true }


[build-dependencies]
substrate-wasm-builder = {  git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.37" }

[features]
default = ["std"]
std = [
	"serde/std",
	"frame-try-runtime?/std",
	"frame-system-benchmarking?/std",
	"frame-benchmarking?/std",
	"codec/std",
	"scale-info/std",
	"fp-evm/std",
	"fp-self-contained/std",
	"fp-rpc/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"frame-try-runtime/std",
	"pallet-aura/std",
	"pallet-balances/std",
	"pallet-base-fee/std",
	"pallet-evm/std",
	"pallet-ethereum/std",
	"pallet-grandpa/std",
	"pallet-randomness-collective-flip/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-core/std",
	"sp-inherents/std",
	"sp-io/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-std/std",
	"sp-transaction-pool/std",
	"sp-version/std",
]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]
try-runtime = [
	"frame-try-runtime",
	"frame-executive/try-runtime",
	"frame-system/try-runtime",
	"frame-support/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-randomness-collective-flip/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
]
